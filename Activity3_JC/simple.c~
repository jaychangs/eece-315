#include <linux/init.h>
#include <linux/kernel.h>
#include <linux/module.h>
#include <linux/list.h>
#include <linux/types.h>
// initialize structure
struct birthday {
  int day;
  int month;
  int year;
  struct list_head list;
} birthday;

/* This function is called when the module is loaded. */
int simple_init(void)
{
  printk(KERN_INFO "loaded module");
  //init 
  struct birthday *person;

  static LIST_HEAD(birthday_list);

  person = kmalloc(sizeof(*person), GFP_KERNEL);
  INIT_LIST_HEAD(&person->list);
  person->day = 2;
  person->month = 8;
  person->year = 1995;

  list_add_tail(&person->list, &birthday_list);
return 0;
}

/* This function is called when the module is removed. */
void simple_exit(void)
{
printk(KERN_INFO "Removing Module\n");
}
/* Macros for registering module entry and exit points. */
module_init(simple_init);
module_exit(simple_exit);
MODULE_LICENSE("GPL");
MODULE_DESCRIPTION("Simple Module");
MODULE_AUTHOR("SGG");
